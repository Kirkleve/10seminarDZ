/*
Задача 73: Есть число N. Сколько групп M, можно получить при разбиении 
всех чисел на группы, так чтобы в одной группе все числа были 
взаимно просты (все числа в группе друг на друга не делятся)? Найдите M при 
заданном N и получите одно из разбиений на группы N ≤ 10²⁰. 
Можно использовать рекурсию.
Например, для N = 50, M получается 6
Группа 1: 1
Группа 2: 2 3 11 13 17 19 23 29 31 37 41 43 47
Группа 3: 4 6 9 10 14 15 21 22 25 26 33 34 35 38 39 46 49
Группа 4: 8 12 18 20 27 28 30 42 44 45 50
Группа 5: 7 16 24 36 40
Группа 6: 5 32 48

Или
Группа 1: 1
Группа 2: 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47
Группа 3: 4 6 9 10 14 15 21 22 25 26 33 34 35 38 39 46 49
Группа 4: 8 12 18 20 27 28 30 42 44 45 50
Группа 5: 16 24 36 40
Группа 6: 32 48
*/

int n = InputElement("Введите число N");
int[] group = new int[n];
/*
for(int i = 2; i<= group.Length; i*=2)
{

    for (int j = 1; j <= group.Length; j++)
    {
        
        if (PrimeNumber(j) && i < n)
        {
            Console.Write(j + " ");
        }
    }
}
*/



for (int i = 4; i <= n; i++)
{
    if (PrimeNumber(i))
    {
        Console.Write(i + " ");
    }
}




bool PrimeNumber(int N)
{
    for (int i = 2; i <= (int)(N / 2); i++)
    {
        if (N % i == 0)
            return false;
    }
    return true;
}

int InputElement(string output)
{
    Console.Write(output + ": ");
    return Convert.ToInt32(Console.ReadLine());
}
