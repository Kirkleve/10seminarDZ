/*
Задача 73: Есть число N. Сколько групп M, можно получить при разбиении 
всех чисел на группы, так чтобы в одной группе все числа были 
взаимно просты (все числа в группе друг на друга не делятся)? Найдите M при 
заданном N и получите одно из разбиений на группы N ≤ 10²⁰. 
Можно использовать рекурсию.
Например, для N = 50, M получается 6
Группа 1: 1
Группа 2: 2 3 11 13 17 19 23 29 31 37 41 43 47
Группа 3: 4 6 9 10 14 15 21 22 25 26 33 34 35 38 39 46 49
Группа 4: 8 12 18 20 27 28 30 42 44 45 50
Группа 5: 7 16 24 36 40
Группа 6: 5 32 48
Или
Группа 1: 1
Группа 2: 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47
Группа 3: 4 6 9 10 14 15 21 22 25 26 33 34 35 38 39 46 49
Группа 4: 8 12 18 20 27 28 30 42 44 45 50
Группа 5: 16 24 36 40
Группа 6: 32 48
*/

Console.Write("Введите N: ");
int number = int.Parse(Console.ReadLine());
int groop = 0;
string primeNumber = String.Empty;
for (int i = 1; i <= number; i++)
{
    if (i == Math.Pow(2, groop))
    {
        Console.WriteLine();
        groop++;
        Console.Write($"{groop}-я группа");
    }
    if (isSimple(i, groop ))
    {
        primeNumber = i.ToString();
        Console.Write(primeNumber + " ");
    }
}

bool isSimple(int N, int ind)
{
    for (int i = ind; i <= (N / 2); i++)
    {
        if (N % i == 0)
            return false;
    }
    return true;
}


